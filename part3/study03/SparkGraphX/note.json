{"paragraphs":[{"text":"%dep \nz.load(\"/usr/spark/lib/gs-core-1.2.jar\")\nz.load(\"/usr/spark/lib/gs-ui-1.2.jar\")\nz.load(\"/usr/spark/lib/breeze-viz_2.10-0.9.jar\")\nz.load(\"/usr/spark/lib/breeze_2.10-0.9.jar\")\nz.load(\"/usr/spark/lib/jcommon-1.0.16.jar\")\nz.load(\"/usr/spark/lib/jfreechart-1.0.13.jar\")\n","dateUpdated":"Jan 22, 2016 3:56:55 AM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1453431860197_852447757","id":"20160122-030420_1523244005","result":{"code":"SUCCESS","type":"TEXT","msg":"res0: org.apache.zeppelin.dep.Dependency = org.apache.zeppelin.dep.Dependency@1734ae60\n"},"dateCreated":"Jan 22, 2016 3:04:20 AM","dateStarted":"Jan 22, 2016 3:56:55 AM","dateFinished":"Jan 22, 2016 3:57:02 AM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:53"},{"text":"import org.graphstream.graph.{Graph => GraphStream}","dateUpdated":"Jan 22, 2016 3:57:13 AM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1453432022349_-860641525","id":"20160122-030702_2122896711","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.graphstream.graph.{Graph=>GraphStream}\n"},"dateCreated":"Jan 22, 2016 3:07:02 AM","dateStarted":"Jan 22, 2016 3:57:13 AM","dateFinished":"Jan 22, 2016 3:57:33 AM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:54"},{"text":"import org.graphstream.graph.implementations._","dateUpdated":"Jan 22, 2016 3:57:36 AM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1453433774401_314712170","id":"20160122-033614_928509249","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.graphstream.graph.implementations._\n"},"dateCreated":"Jan 22, 2016 3:36:14 AM","dateStarted":"Jan 22, 2016 3:57:36 AM","dateFinished":"Jan 22, 2016 3:57:36 AM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:55"},{"text":"// Create a SingleGraph class for GraphStream visualization\nval graph: SingleGraph = new SingleGraph(\"EgoSocial\")","dateUpdated":"Jan 22, 2016 3:57:48 AM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1453434513804_1505363352","id":"20160122-034833_1462189440","result":{"code":"SUCCESS","type":"TEXT","msg":"graph: org.graphstream.graph.implementations.SingleGraph = EgoSocial\n"},"dateCreated":"Jan 22, 2016 3:48:33 AM","dateStarted":"Jan 22, 2016 3:57:48 AM","dateFinished":"Jan 22, 2016 3:57:49 AM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:56"},{"text":"// Given the egoNetwork, load the graphX vertices into GraphStream\nfor ((id,_) <- egoNetwork.vertices.collect()) {\n   val node = graph.addNode(id.toString).asInstanceOf[SingleNode]\n}\n// Load the graphX edges into GraphStream edges\nfor (Edge(x,y,_) <- egoNetwork.edges.collect()) {\n   val edge = graph.addEdge(x.toString ++ y.toString,\n                            x.toString, y.toString,\n                            true).asInstanceOf[AbstractEdge]\n   }","dateUpdated":"Jan 22, 2016 3:58:54 AM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1453434512641_278399109","id":"20160122-034832_1790145333","result":{"code":"ERROR","type":"TEXT","msg":"<console>:35: error: not found: value egoNetwork\n              for ((id,_) <- egoNetwork.vertices.collect()) {\n                             ^\n"},"dateCreated":"Jan 22, 2016 3:48:32 AM","dateStarted":"Jan 22, 2016 3:58:54 AM","dateFinished":"Jan 22, 2016 3:58:55 AM","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:57"},{"text":"graph.display()","dateUpdated":"Jan 22, 2016 3:59:26 AM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1453434512276_529640141","id":"20160122-034832_1032846883","result":{"code":"ERROR","type":"TEXT","msg":"java.awt.HeadlessException: \nNo X11 DISPLAY variable was set, but this program performed an operation which requires it.\n\tat java.awt.GraphicsEnvironment.checkHeadless(GraphicsEnvironment.java:207)\n\tat java.awt.Window.<init>(Window.java:536)\n\tat java.awt.Frame.<init>(Frame.java:420)\n\tat javax.swing.JFrame.<init>(JFrame.java:225)\n\tat org.graphstream.ui.swingViewer.DefaultView.openInAFrame(DefaultView.java:215)\n\tat org.graphstream.ui.swingViewer.Viewer.addView(Viewer.java:510)\n\tat org.graphstream.ui.swingViewer.Viewer.addView(Viewer.java:488)\n\tat org.graphstream.graph.implementations.AbstractGraph.display(AbstractGraph.java:538)\n\tat org.graphstream.graph.implementations.AbstractGraph.display(AbstractGraph.java:531)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:34)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:39)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:41)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:43)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:45)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC.<init>(<console>:47)\n\tat $iwC$$iwC$$iwC$$iwC.<init>(<console>:49)\n\tat $iwC$$iwC$$iwC.<init>(<console>:51)\n\tat $iwC$$iwC.<init>(<console>:53)\n\tat $iwC.<init>(<console>:55)\n\tat <init>(<console>:57)\n\tat .<init>(<console>:61)\n\tat .<clinit>(<console>)\n\tat .<init>(<console>:7)\n\tat .<clinit>(<console>)\n\tat $print(<console>)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:483)\n\tat org.apache.spark.repl.SparkIMain$ReadEvalPrint.call(SparkIMain.scala:1065)\n\tat org.apache.spark.repl.SparkIMain$Request.loadAndRun(SparkIMain.scala:1346)\n\tat org.apache.spark.repl.SparkIMain.loadAndRunReq$1(SparkIMain.scala:840)\n\tat org.apache.spark.repl.SparkIMain.interpret(SparkIMain.scala:871)\n\tat org.apache.spark.repl.SparkIMain.interpret(SparkIMain.scala:819)\n\tat org.apache.zeppelin.spark.SparkInterpreter.interpretInput(SparkInterpreter.java:713)\n\tat org.apache.zeppelin.spark.SparkInterpreter.interpret(SparkInterpreter.java:678)\n\tat org.apache.zeppelin.spark.SparkInterpreter.interpret(SparkInterpreter.java:671)\n\tat org.apache.zeppelin.interpreter.ClassloaderInterpreter.interpret(ClassloaderInterpreter.java:57)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:93)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:302)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:171)\n\tat org.apache.zeppelin.scheduler.FIFOScheduler$1.run(FIFOScheduler.java:139)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:745)\n\n"},"dateCreated":"Jan 22, 2016 3:48:32 AM","dateStarted":"Jan 22, 2016 3:59:26 AM","dateFinished":"Jan 22, 2016 3:59:29 AM","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:58"},{"title":"참고자료","text":"%md\n#참고자료\n* [1] docker + spark + zeppelin - https://hub.docker.com/r/dylanmei/zeppelin/\n* [2] Dependency Management -  https://zeppelin.incubator.apache.org/docs/latest/interpreter/spark.html","dateUpdated":"Jan 22, 2016 4:08:50 AM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","title":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1453434058984_-1469770198","id":"20160122-034058_1185773224","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>참고자료</h1>\n<ul>\n<li>[1] docker + spark + zeppelin - https://hub.docker.com/r/dylanmei/zeppelin/</li>\n<li>[2] Dependency Management -  https://zeppelin.incubator.apache.org/docs/latest/interpreter/spark.html</li>\n</ul>\n"},"dateCreated":"Jan 22, 2016 3:40:58 AM","dateStarted":"Jan 22, 2016 4:08:50 AM","dateFinished":"Jan 22, 2016 4:08:50 AM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:59"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1453434600942_87487034","id":"20160122-035000_938705463","dateCreated":"Jan 22, 2016 3:50:00 AM","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:60"}],"name":"grpahX","id":"2BAPVMWYJ","angularObjects":{"2B9A24Z6H":[],"2BB9T2UG8":[],"2B9PTJ44M":[],"2B8Z77283":[],"2BBUWEMX7":[],"2B9D8ZJPS":[],"2BAEFE1TM":[],"2B8DSU8DB":[],"2BBNNG9Y4":[],"2B8Z2RMQF":[],"2BB77S2ZD":[],"2BAR21GJA":[],"2BA2SR1RU":[],"2B9MVSTUK":[]},"config":{"looknfeel":"default"},"info":{}}
